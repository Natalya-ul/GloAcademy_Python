import pygame
import random
import time

class Ball:
    def __init__(self, display):
        self.display = display
        self.color = pygame.Color('red')
        self.center_x = 100
        self.center_y = 100
        self.radius = 30

        self.vx = 2
        self.vy = 2

    def show(self):
        pygame.draw.circle(self.display, self.color, (self.center_x, self.center_y), self.radius)

    def clear(self):
        pygame.draw.circle(self.display, pygame.Color('white'), (self.center_x, self.center_y), self.radius)

    def go(self):
        self.center_x += self.vx
        self.center_y += self.vy

    def move(self):
        self.clear()
        self.go()
        self.show()

    def stop(self):
        self.vx = 0
        self.vy = 0


class RandomPointBall(Ball):
    def __init__(self, display):
        super().__init__(display)
        
        self.color = pygame.Color('blue')

        width, hight = display.get_size()
        self.center_x = random.randint(self.radius, width - self.radius)
        self.center_y = random.randint(self.radius, hight - self.radius)

class PointBall(Ball):
    def __init__(self, display, x, y):
        super().__init__(display)
        
        self.color = pygame.Color('yellow')
        
        self.center_x = x
        self.center_y = y

class RandomPointMovableBall(RandomPointBall):
    def __init__(self, display):
        super().__init__(display)

        self.vx = random.randrange(-3, 3)
        while self.vx == 0:
            self.vx = random.randrange(-3, 3)
            
        self.vy = random.randrange(-3, 3)

class BillyardBall(RandomPointMovableBall):
    def __init__(self, display):

        super().__init__(display)
        self.color = pygame.Color('green')

    def go(self):
        super().go()

        if self.center_x <= self.radius or self.center_x >= width - self.radius:
            self.vx = -self.vx
        if self.center_y <= self.radius or self.center_y >= hight - self.radius:
            self.vy = -self.vy

    def counter(self):
        if ball.center_x <= self.radius:
            global counter_left
            counter_left += 1
            self.show_count((0, hight / 2), counter_left)
        if ball.center_x >= width - self.radius:
            global counter_right
            counter_right += 1
            self.show_count((width - 250, hight / 2), counter_right)
        if ball.center_y <= self.radius:
            global counter_top 
            counter_top += 1
            self.show_count((width / 2, 0), counter_top)
        if ball.center_y >= hight - self.radius:
            global counter_bottom
            counter_bottom += 1
            self.show_count((width / 2, hight - 50), counter_top)

    def show_count(self, coordinates, counter):
        text = font.render(f'Кол-во ударов =          ', True,
                              pygame.Color('red'), pygame.Color('white'))
        display.blit(text, coordinates)
        
        text = font.render(f'Кол-во ударов = {counter}', True,
                              pygame.Color('red'), pygame.Color('white'))
        display.blit(text, coordinates)


pygame.init()

width = 700
hight = 300
display = pygame.display.set_mode((width, hight))
display.fill(pygame.Color('white'))

font = pygame.font.SysFont('arial', 25)

counter_left = 0
counter_right = 0
counter_top = 0
counter_bottom = 0

balls = []
for i in range(6):
    ball = BillyardBall(display)
    ball.show()
    balls.append(ball)

pygame.display.flip()

time.sleep(2)

clock = pygame.time.Clock()



while True:
    event_list = pygame.event.get()
    for event in event_list:
        if event.type == pygame.QUIT:
            pygame.quit()

        if event.type == pygame.MOUSEBUTTONDOWN:
            for ball in balls:
                ball.stop()

    for ball in balls:
        ball.move()
        BillyardBall.counter(ball)


    pygame.display.flip()
    clock.tick(40)
